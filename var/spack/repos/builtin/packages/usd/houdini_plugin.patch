diff -pur USD/third_party/houdini/CMakeLists.txt USD-mod/third_party/houdini/CMakeLists.txt
--- USD/third_party/houdini/CMakeLists.txt	2019-06-10 17:03:55.000000000 -0600
+++ USD-mod/third_party/houdini/CMakeLists.txt	2019-06-10 17:08:33.000000000 -0600
@@ -1,18 +1,19 @@
 if (APPLE)   
-    message(WARNING "Skipping third_party/houdini because the Houdini plugin is not supported on MacOS")
-    return()
-elif (WIN32)
+    message(WARNING "The Houdini plugin is not supported on macOS")
+elseif (WIN32)
     message(WARNING "The Houdini plugin is not supported on Windows")
 endif()
 
 set(PXR_INSTALL_SUBDIR "third_party/houdini")
 
 add_definitions( 
-    -DHOUDINI_API_VERSION=${HOUDINI_MAJOR_VERSION}${HOUDINI_MINOR_VERSION}
+    -DHOUDINI_API_VERSION=${HOUDINI_MAJOR_RELEASE}${HOUDINI_MINOR_RELEASE}
     -DVERSION="${HOUDINI_VERSION}"
     -DHOUDINI_DOT_VERSION=${HOUDINI_BUILD_VERSION} )
 
-if (UNIX)
+if (APPLE)   
+    add_definitions(  -fpermissive -D_GNU_SOURCE -DSIZEOF_VOID_P=8 -DFBX_ENABLED=1 -DOPENCL_ENABLED=1 -DOPENVDB_ENABLED=1 -DMAKING_DSO -DSESI_LITTLE_ENDIAN -DENABLE_THREADS -DUSE_PTHREADS -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DGCC4 -DGCC3 -Wall -Wno-parentheses -Wno-sign-compare -Wno-reorder -Wno-uninitialized -Wunused -Wno-unused-parameter -Wno-unused-local-typedefs -Wno-empty-body -fno-strict-aliasing )
+elseif (UNIX and not APPLE)
 
     add_definitions(  -fpermissive -D_GNU_SOURCE -DLINUX -DAMD64 -DSIZEOF_VOID_P=8 -DFBX_ENABLED=1 -DOPENCL_ENABLED=1 -DOPENVDB_ENABLED=1 -DMAKING_DSO -DSESI_LITTLE_ENDIAN -DENABLE_THREADS -DUSE_PTHREADS -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DGCC4 -DGCC3 -Wall -Wno-parentheses -Wno-sign-compare -Wno-reorder -Wno-uninitialized -Wunused -Wno-unused-parameter -Wno-unused-local-typedefs -Wno-empty-body -fno-strict-aliasing )
 
